var Class = require('jn-classjs'),
	_ = require('lodash');

module.exports = Class.create({
	constructor: function() {
		this.headers = {};
		this.body = null;
		this.init.apply(this, arguments);
	},

	init: function(code, body, headers) {
		var argc = arguments.length;

		// code + result + headers?
		if (argc >= 2) {
			this.code = arguments[0];
			this.body = body;
			headers && this.header(headers);
		}

		// one arg, code only
		else if (argc === 1) {
			if (typeof code === 'number') {
				this.code = code;
			} else {
				this.body = body;
			}
		}
	},

	redirect: function(url) {
		this.header('Location', url);
		return this;
	},

	cookie: function(name, value, opt) {
		// TODO
		return this;
	},

	header: function(name, value) {
		if (_.isObject(name)) {
			console.log(name);
			_.each(name, function(content, header) {
				this.headers[header] = content;
			}, this);
		} else {
			this.headers[name] = value;
		}

		return this;
	},

	append: function(value) {
		if (this.body === null) {
			this.body = value;
		} else if (_.isString(this.body)) {
			this.body += value;
		} else if (_.isArray(this.body)) {
			this.body.concat(value);
		} else if (_.isObject(this.body)) {
			// paramName + value
			if (arguments.length === 2) {
				this.body[arguments[0]] = arguments[1];
			} else {
				this.body = _.merge(this.body, value);
			}
		}

		return this;
	},

	getCode: function() {
		return this.code;
	},

	getBody: function() {
		return this.body;
	},

	getHeaders: function() {
		return this.headers;
	}
});