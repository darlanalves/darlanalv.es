var Class = require('jn-classjs'),
	JsonReader = require('App/JsonReader'),
	_ = require('lodash');

/**
 * @class Config
 * Loads one or more .json files recursively, and process config sections (envs)
 */
module.exports = Class.create({
	/**
	 * @constructor
	 * @param {String} path		Start point to scan
	 */
	constructor: function(path) {
		this.reader = new JsonReader(path);
		this.processSections();
	},

	processSections: function() {
		var data = this.reader.getData(),
			sections = {},
			re = /[:]+/;

		_.each(data, function(section, name) {
			if (re.test(name)) {
				var parts = name.split(re), child = parts[0], parent = parts[1];
				if (sections.hasOwnProperty(parent)) {
					sections[child] = _.merge({}, sections[parent], section);
				} else {
					throw new Error('Parent section of %s not found: %s', child, parent);
				}
			} else {
				sections[name] = section;
			}
		}, this);

		this.sections = sections;
	},

	getSection: function(name) {
		return this.sections[name] || null;
	},

	getSections: function() {
		return this.sections;
	}
});