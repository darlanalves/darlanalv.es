var c = require('jn-classjs'),
	CacheFactory = require('App/cache/CacheFactory'),
	Router = require('App/router/Router');

module.exports = c.define('App.core.Module', {
	constructor: function(name, path, application) {
		this.application = application;
		this.name = name;
		this.path = path;

		this.initRouter();
		this.initControllers();
	},

	getController: function(name) {
		var realName = getControllerClass(name);

		if (!this.controllers.has(realName)) {
			var ControllerClass = require(this.path + '/controllers/' + realName),
				object = new ControllerClass(this.application);

			this.controllers.set(realName, object, 3600000);	// 1h
		} else {
			object = this.controllers.get(realName);
		}

		return object;
	},

	initRouter: function() {
		this.router = new Router(this.application);
		this.router.loadRoutes(this.path + '/routes');
	},

	initControllers: function() {
		this.controllers = CacheFactory.getMemoryCache();
	},

	getLayout: function() {
		if (!this.$layout) {
			this.$layout = new View(this.path + '/layout.html');
		}
	}
});

/**
 * Returns the controller canonical name for a given controller name (like "IndexController" to "index")
 * @param {String} controller
 * @return {String}
 */

function getControllerClass(name) {
	return name.substr(0, 1).toUpperCase() + name.substr(1) + 'Controller';
}