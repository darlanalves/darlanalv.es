var c = require('jn-classjs');

module.exports = c.define('App.core.Dispatcher', {

	constructor: function() {

	},

	/**
	 * Returns a dispatcher function to bind on a given route
	 * @private
	 */
	dispatcherFactory: function(moduleName, controllerName, action) {
		var app = this.express,
			that = this;

		return function(request, response) {
			logger.log('Dispatching %s/%s::%s', moduleName, controllerName, action);

			try {
				that.dispatch(request, response, moduleName, controllerName, action);
			} catch (e) {
				var code = e.code;

				if (code === err.moduleNotFound || code === err.controllerNotFound || code === err.invalidAction) {
					response.send(404, code);
				} else {
					response.send(500, code);
				}
			}
		};
	},

	/**
	 * TODO move to a better place
	 * @private
	 */
	dispatch: function(request, response, moduleName, controllerName, methodName) {
		var ControllerClass = require('modules/' + moduleName + '/controllers/' + this.getControllerClass(controllerName));

		if (ControllerClass) {
			var controllerInstance = new ControllerClass(this, request, response);
			controllerInstance.setView(controllerName, methodName);

			if (typeof controllerInstance[methodName] === 'function') {
				var viewPath = this.getActionViewPath(moduleName, controllerName, methodName);
				logger.log('Loading view %s', viewPath);
				controllerInstance.setView(viewPath);

				// call the controller action
				controllerInstance[methodName].call(controllerInstance, request.params, request, response);

				//var viewCode =
			} else {
				this.throwDispatchException(err.invalidAction);
			}
		} else {
			this.throwDispatchException(err.controllerNotFound);
		}
	},

	throwDispatchException: function(err) {
		var e = new Error;
		e.code = err;
		throw e;
	},

	getLayoutViewPath: function(moduleName) {
		return rootPath + '/application/modules/' + moduleName + '/views/layout.html';
	},

	getActionViewPath: function(moduleName, controller, action) {
		return rootPath + '/application/modules/' + moduleName + '/views/' + controller + '/' + action + '.html';
	}
});