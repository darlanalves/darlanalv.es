var Class = require('jn-classjs'),
	fs = require('fs'),
	lo = require('lodash'),

	ConfigLoader = require('App/core/ConfigLoader'),
	Route = require('App/router/Route'),
	logger = require('App/core/Logger'),

	err = {
		moduleNotFound: 'MODULE_NOT_FOUND',
		controllerNotFound: 'CONTROLLER_NOT_FOUND',
		invalidAction: 'INVALID_ACTION'
	},

	rootPath = require('path').dirname(require.main.filename);

module.exports = Class.define('App.router.Router', {
	/**
	 * @property express
	 * The express application
	 */

	/**
	 * @param {Object} application		The express instance
	 */
	constructor: function(app) {
		this.application = app;
		this.routes = {};
		this.express = app.getExpress();
	},

	/**
	 * Loads the routes
	 */
	loadRoutes: function(path) {
		var loader = new ConfigLoader(path),
			that = this;

		lo.each(loader.getConfig(), function(routeData, name) {
			var route = new Route(routeData);
			that.routes[name] = route;

			lo.each(route.getMethods(), function(method) {
				logger.log('Adding route: %s %s', method.toUpperCase(), route.getUrl());
				that.registerRoute(method, route);
			});
		});
	},

	/**
	 * Register the route with express app
	 * @param {String} method
	 * @param {Route} route
	 */
	registerRoute: function(method, route) {
		var that = this;
		this.express[method](
		route.getUrl(), function() {
			that.dispatch(route);
		});
	},

	/**
	 * Calls the dispatcher
	 * @param {Route} route
	 */
	dispatch: function(route) {
		this.dispatcher.dispatch(
		route.getModule(), route.getController(), route.getAction());
	}

});